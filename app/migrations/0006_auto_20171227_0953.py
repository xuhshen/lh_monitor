# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-12-27 09:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0005_capitalaccount_today_profit'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='账户名', max_length=100)),
                ('account', models.CharField(help_text='账户号', max_length=50)),
                ('type', models.CharField(help_text='账户类型', max_length=50)),
                ('company', models.ForeignKey(help_text='交易品种状态', on_delete=django.db.models.deletion.CASCADE, to='app.Company')),
            ],
        ),
        migrations.CreateModel(
            name='StockHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rest_capital', models.FloatField(default=0, help_text='资金余额')),
                ('enable_capital', models.FloatField(default=0, help_text='可用资金')),
                ('frozen_capital', models.FloatField(default=0, help_text='冻结资金')),
                ('market_value', models.FloatField(default=0, help_text='最新市值')),
                ('total_assets', models.FloatField(default=0, help_text='总资产')),
                ('profit_loss', models.FloatField(default=0, help_text='浮动盈亏')),
                ('preferred_capital', models.FloatField(default=0, help_text='可取资金')),
                ('margin_selling_capital', models.FloatField(default=0, help_text='融券卖出资金')),
                ('counters_bought_number', models.FloatField(default=0, help_text='取柜台可买数量')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('lastupdate_time', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(help_text='交易账户', on_delete=django.db.models.deletion.CASCADE, to='app.Account')),
            ],
        ),
        migrations.CreateModel(
            name='StockHoldList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='证券代码', max_length=30)),
                ('name', models.CharField(help_text='证券名称', max_length=30)),
                ('number', models.FloatField(default=0, help_text='证券数量')),
                ('enable_number', models.FloatField(default=0, help_text='可卖数量')),
                ('buy_price', models.FloatField(default=0, help_text='成本价')),
                ('cost', models.FloatField(default=0, help_text='盈亏成本价')),
                ('current_price', models.FloatField(default=0, help_text='当前价')),
                ('market_value', models.FloatField(default=0, help_text='最新市值')),
                ('profit_loss', models.FloatField(default=0, help_text='浮动盈亏')),
                ('profit_loss_rate', models.FloatField(default=0, help_text='盈亏比例')),
                ('buy_financing_balance', models.FloatField(default=0, help_text='融资买入证券实时余额')),
                ('rest_buy_financing', models.FloatField(default=0, help_text='融资买入余额')),
                ('enable_buy_financing', models.FloatField(default=0, help_text='融资买入可用')),
                ('value_rate', models.FloatField(default=0, help_text='个股资产比例')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('lastupdate_time', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(help_text='交易账户', on_delete=django.db.models.deletion.CASCADE, to='app.Account')),
            ],
        ),
        migrations.CreateModel(
            name='StockLatestRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rest_capital', models.FloatField(default=0, help_text='资金余额')),
                ('enable_capital', models.FloatField(default=0, help_text='可用资金')),
                ('frozen_capital', models.FloatField(default=0, help_text='冻结资金')),
                ('market_value', models.FloatField(default=0, help_text='最新市值')),
                ('total_assets', models.FloatField(default=0, help_text='总资产')),
                ('profit_loss', models.FloatField(default=0, help_text='浮动盈亏')),
                ('preferred_capital', models.FloatField(default=0, help_text='可取资金')),
                ('margin_selling_capital', models.FloatField(default=0, help_text='融券卖出资金')),
                ('counters_bought_number', models.FloatField(default=0, help_text='取柜台可买数量')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('lastupdate_time', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(help_text='交易账户', on_delete=django.db.models.deletion.CASCADE, to='app.Account')),
            ],
        ),
        migrations.CreateModel(
            name='StockTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(help_text='委托日期')),
                ('order_time', models.DateTimeField(help_text='委托时间')),
                ('code', models.CharField(help_text='证券代码', max_length=30)),
                ('name', models.CharField(help_text='证券名称', max_length=30)),
                ('order_price', models.FloatField(default=0, help_text='委托价格')),
                ('order_number', models.FloatField(default=0, help_text='委托数量')),
                ('order_ticket', models.CharField(help_text='委托编号', max_length=30)),
                ('deal_number', models.FloatField(default=0, help_text='成交数量')),
                ('deal_money', models.FloatField(default=0, help_text='成交金额')),
                ('cancel_number', models.FloatField(default=0, help_text='撤单数量')),
                ('cancel_mark', models.BooleanField(help_text='撤单标志')),
                ('account', models.ForeignKey(help_text='交易账户', on_delete=django.db.models.deletion.CASCADE, to='app.Account')),
                ('action', models.ForeignKey(help_text='买卖标志', on_delete=django.db.models.deletion.CASCADE, to='app.Action')),
            ],
        ),
        migrations.RemoveField(
            model_name='capitalaccount',
            name='company',
        ),
        migrations.RemoveField(
            model_name='capitalaccount',
            name='type',
        ),
        migrations.RemoveField(
            model_name='category',
            name='status',
        ),
        migrations.RemoveField(
            model_name='holdcategory',
            name='code',
        ),
        migrations.RemoveField(
            model_name='record',
            name='strategy_account',
        ),
        migrations.RemoveField(
            model_name='record',
            name='trade_action',
        ),
        migrations.RemoveField(
            model_name='record',
            name='trade_category',
        ),
        migrations.RemoveField(
            model_name='record',
            name='trade_status',
        ),
        migrations.RemoveField(
            model_name='strategyuser',
            name='capitalaccount',
        ),
        migrations.RemoveField(
            model_name='strategyuser',
            name='holdlist',
        ),
        migrations.RemoveField(
            model_name='strategyuser',
            name='user',
        ),
        migrations.DeleteModel(
            name='AccountType',
        ),
        migrations.DeleteModel(
            name='CapitalAccount',
        ),
        migrations.DeleteModel(
            name='Category',
        ),
        migrations.DeleteModel(
            name='CategoryStatus',
        ),
        migrations.DeleteModel(
            name='HoldCategory',
        ),
        migrations.DeleteModel(
            name='Record',
        ),
        migrations.DeleteModel(
            name='Status',
        ),
        migrations.DeleteModel(
            name='StrategyUser',
        ),
    ]
